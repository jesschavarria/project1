group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/sum)
nafreeYear %>%
mutate(totalID=n_distinct(ID)) %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/totalID)
nafreeYear %>%
summarize(totalID=n_distinct(ID))
nafreeYear %>%
summarize(totalID=n_distinct(ID)) %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/totalID)
nafreeYear %>%
group_by(semester2)
nafreeYear %>%
summarize(sem=n_distinct(semester2))
nafreeYear %>%
summarize(sem=n(semester2))
nafreeYear %>%
summarize(sem=n())
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/n())
nafreeYear %>%
group_by(semester2) %>% summarize(n())
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID))
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID)) %>% summarize(n())
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID))
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/n_distinct(n()))
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/sum(n()))
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/sum(n_distinct(n()))
nafreeYear %>%
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/sum(ID))
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/sum(n_distinct(ID)))
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/sum(n_distinct(semester2)))
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/497)
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/n_distinct(ID))
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/497)
nafreeYear %>% summarize(n_distinct(ID))
nafreeYear %>% summarize(n_distinct(ID)) %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/497)
nafreeYear %>% mutate(totalID = n_distinct(ID))
nafreeYear %>% mutate(totalID = n_distinct(ID)) %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/totalID)
nafreeYear %>% mutate(totalID = n_distinct(ID)) %>%
group_by(semester2) %>% summarize(n=n(), prop=n/totalID)
nafreeYear %>% mutate(totalID = n_distinct(ID)) %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/totalID)
nafreeYear %>% mutate(n=n())
nafreeYear %>%
group_by(semester2) %>% mutate(n=n())
nafreeYear %>%
group_by(semester2) %>% mutate(n=n_distinct())
nafreeYear %>%
group_by(semester2) %>% mutate(n=n_distinct(ID))
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID))
nafreeYear %>%
group_by(semester2) %>% mutate(n=n_distinct(ID)) %>%
summarize(prop=n/sum(n))
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/497)
nafree %>%
group_by(semester, graduated)
nafree %>%
group_by(semester, graduated) %>% summarize(n())
nafree %>%
group_by(semester, graduated) %>% summarize(n_distinct(ID))
nafree %>%
group_by(graduated) %>% summarize(n_distinct(ID))
nafree %>%
group_by(graduated) %>% summarize(max(ccyys))
nafree %>%
group_by(graduated) %>% summarize(max(order))
nafree %>%
group_by(graduated) %>% filter(order="eighth")
nafree %>%
group_by(order) %>% summarize(n_distinct(ID))
nafree %>% filter(order=="eighth")
nafree %>% filter(order=="eighth", graduated==1)
nafree %>% filter(order=="eighth", graduated==0)
nafree %>% filter(ID=9375)
nafree %>% filter(ID==9375)
nafree %>% filter(ID==9375) %>% summarize(sum(order))
nafree %>% filter(ID==9375) %>% summarize(n(order))
nafree %>% filter(ID==9375) %>% summarize(n()
nafree %>% filter(ID==9375) %>% summarize(n())
nafree %>% filter(ID==9375)
nafree %>% filter(graduated==0)
nafree %>% filter(graduated==0) %>% group_by(ID) %>% summarize(n())
nafree %>% filter(graduated==0) %>% group_by(ID) %>% summarize(n=n()) %>% summarize(max(n))
nafree %>% filter(graduated==0) %>% group_by(ID) %>% summarize(n=n())
nafree %>% filter(graduated==0) %>% group_by(ID) %>% summarize(n=n(), max(n))
nafree %>% filter(graduated==0) %>% group_by(ID) %>% summarize(n=n(), max(n))
nafree %>% filter(graduated==0) %>% group_by(ID) %>% summarize(n=n())
nafree %>% filter(graduated==0) %>% group_by(ID) %>% summarize(n=n()) %>% arrange(n)
nafree %>% filter(graduated==0) %>% group_by(ID) %>% summarize(n=n()) %>% arrange(-n)
nafree %>%
filter(graduated==0) %>%
group_by(ID) %>%
summarize(n=n()) %>%
arrange(-n)
nafree %>%
filter(graduated==0) %>%
group_by(ID) %>%
summarize(totalsem=n()) %>%
arrange(-totalsem)
View(nafreeYear)
nafreeYear %>%
filter(semester2==6)
nafreeYear %>%
filter(semester2==6) %>% group_by(ID)
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/497)
n_distinct(nafreeYear$ID)
nafreeYear %>%
group_by(semester2) %>% summarize(n=n_distinct(ID), prop=n/497)
library(tidyverse)
string1 <- "We have to extract these numbers 12, 47, 48 The integers numbers are also interesting: 189 2036 314 \',\' is a separator, so please extract these numbers 125,789,1450 and also these 564,90456 We like to offer you 7890$ per month in order to complete this task... we are joking"
str_view_all(string1, "0-9")
install.packages("htmlwidgets")
str_view_all(string1, "0-9")
str_view_all(string1, "[0-9]")
str_match_all(string1, "[0-9]")
str_match_all(string1, "[^abc]")
str_match_all(string1, "[\p{numeric_value=9}]")
str_match_all(string1, "[0-9]")
str_match_all(string1, "a*")
str_match_all(string1, "\W")
str_match_all(string1, \W)
str_match_all(string1, "[:digit:]")
str_match_all(string1, "\\d")
str_match_all(string1, "\\d*")
str_match_all(string1, "[0-9]*")
str_match_all(string1, "([0-9])*")
str_match_all(string1, "[0-9]*")
str_match_all(string1, "[0-9]+")
string2 <-'Jan 13 00:48:59: DROP service 68->67(udp) from 213.92.153.167 to 69.43.107.219, prefix: "spoof iana-0/8" (in: eth0 69.43.112.233(38:f8:b7:90:45:92):68 -> 217.70.100.113(00:21:87:79:9c:d9):67 UDP len:576 ttl:64)
string2 <-'Jan 13 00:48:59: DROP service 68->67(udp) from 213.92.153.167 to 69.43.107.219, prefix: "spoof iana-0/8" (in: eth0 69.43.112.233(38:f8:b7:90:45:92):68 -> 217.70.100.113(00:21:87:79:9c:d9):67 UDP len:576 ttl:64)
string2 <-'Jan 13 00:48:59: DROP service 68->67(udp) from 213.92.153.167 to 69.43.107.219, prefix: "spoof iana-0/8" (in: eth0 69.43.112.233(38:f8:b7:90:45:92):68 -> 217.70.100.113(00:21:87:79:9c:d9):67 UDP len:576 ttl:64)
Jan 13 12:02:48: ACCEPT service dns from 74.125.186.208 to firewall(pub-nic-dns), prefix: "none"
(in: eth0 74.125.186.208(00:1a:e3:52:5d:8e):36008 -> 140.105.63.158(00:1a:9a:86:2e:62):53 UDP len:82 ttl:38)
Jan 13 17:44:52: DROP service 68->67(udp) from 172.45.240.237 to 217.70.177.60, prefix: "spoof iana-0/8"
(in: eth0 216.34.90.16(00:21:91:fe:a2:6f):68 -> 69.43.85.253(00:07:e1:7c:53:db):67 UDP len:328 ttl:64)
Jan 13 17:52:08: ACCEPT service http from 213.121.184.130 to firewall(pub-nic), prefix: "none"
(in: eth0 213.121.184.130(00:05:2e:6a:a4:14):8504 -> 140.105.63.164(00:60:11:92:ed:1b):80 TCP flags: ****S* len:52 ttl:109)'
str_match_all(string2, "[0-9]+")
str_match_all(string2, "[0-9]+|\\.")
str_match_all(string2, ".4.")
str_match_all(string2, "...\\....\\....\\....")
str_match_all(string2, "[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+")
str_match_all(string2, "[a-zA-z0-9]+\\:[a-zA-z0-9]+\\:[a-zA-z0-9]+\\:[a-zA-z0-9]+")
str_match_all(string2, "[a-zA-z0-9]+\\:[a-zA-z0-9]+\\:[a-zA-z0-9]+\\:[a-zA-z0-9]+\\:[a-zA-z0-9]+\\:[a-zA-z0-9]+")
str_match_all(string2, "[a-zA-z0-9]+\\:{5}")
str_match_all(string2, "[a-zA-z0-9]+\\:{3,}")
str_match_all(string2, "[a-zA-z0-9]+\\:+")
str_match_all(string2, "[a-zA-z0-9]+\\:{4}")
str_match_all(string2, "[[a-zA-z0-9]+\\:]{4}")
str_match_all(string2, "[[a-zA-z0-9]+\\:]{17}")
str_match_all(string2, "[[0-9]+\\.]{15}")
str_match_all(string2, "[[0-9]+\\.]{12-15}")
str_match_all(string2, "[[0-9]+\\.]{15}")
str_match_all(string2, "[[0-9]+\\.]{12,}")
string3 <-"Fedora Core 		ftp
Fedora Extras 	http 	ftp 	rsync
ftp://ftp7.br.FreeBSD.org/pub/FreeBSD/ (ftp)
ftp://ftp3.de.FreeBSD.org/pub/FreeBSD/ (ftp)
ftp://ftp.is.FreeBSD.org/pub/FreeBSD/ (ftp / rsync)
ftp://ftp4.jp.FreeBSD.org/pub/FreeBSD/ (ftp)
ftp://ftp.no.FreeBSD.org/pub/FreeBSD/ (ftp / rsync)
*\
ftp://ftp3.no.FreeBSD.org/pub/FreeBSD/ (ftp)
ftp://ftp.pt.FreeBSD.org/pub/FreeBSD/ (ftp)
ftp://ftp1.ro.FreeBSD.org/pub/FreeBSD/ (ftp / ftpv6)
ftp://ftp3.es.FreeBSD.org/pub/FreeBSD/ (ftp)
ftp://ftp2.tw.FreeBSD.org/pub/FreeBSD/ (ftp / ftpv6 / http / httpv6 / rsync / rsyncv6)
ftp://ftp6.uk.FreeBSD.org/pub/FreeBSD/ (ftp)
ftp://ftp6.us.FreeBSD.org/pub/FreeBSD/ (ftp / http)"
str_match_all(string3, "^[ftp//:]")
str_match_all(string3, "^[ftp\\:]")
str_match_all(string3, "^ftp")
str_match_all(string3, "^[ftp]")
str_match_all(string3, "ftp")
str_match_all(string3, "^ftp")
str_match_all(string3, "^[ftp]")
str_match_all(string3, "ftp\\:")
str_match_all(string3, "[ftp\\:]")
str_match_all(string3, "^[ftp\\:]")
str_match_all(string3, "^ftp\\:")
str_match_all(string3, "ftp\\:")
str_match_all(string3, "ftp\\:(.+)")
str_view_all(string3, "^ftp\\:(.+)")
str_match_all(string3, "^ftp\\:(.+)")
str_match_all(string3, "^ftp\\:")
str_match_all(string3, "^ftp")
str_match_all(string3, "ftp\\:")
str_match_all(string3, "[ftp\\:]")
str_match_all(string3, "[ftp\\:]+")
str_match_all(string3, "[ftp\\:]+{1}")
str_match_all(string3, "[[ftp\\:]+]{1}")
str_match_all(string3, "ftp[\\:]")
str_match_all(string3, "^ftp[\\:]")
str_match_all(string3, "ftp[\\:][a-zA-z0-9]")
str_match_all(string3, "ftp[\\:][\\/]")
str_match_all(string3, "ftp[\\:\\/]")
str_match_all(string3, "ftp[\\:]")
str_match_all(string3, "^[f]")
str_match_all(string3, "ftp\\:")
str_match_all(string3, "FreeBSD[\\/]$")
str_match_all(string3, "[\\/]$")
str_match_all(string3, "^ftp:")
str_match_all(string3, "ftp:")
str_match_all(string3, "[^ftp]")
str_match_all(string3, "^[ftp]")
str_match_all(string3, "^[ftp\\:]")
str_match_all(string3, "ftp:")
str_match_all(string3, "[ ]")
str_match_all(string3, "[ftp://]")
str_match_all(string3, "[ftp://]+")
str_match_all(string3, "ftp://")
str_match_all(string3, "ftp://+")
str_match_all(string3, "ftp://...")
str_match_all(string3, "ftp://[...]{3,}")
str_match_all(string3, "ftp://[...]")
str_match_all(string3, "ftp://...")
str_match_all(string3, "ftp://........")
str_match_all(string3, "ftp://(..)")
str_match_all(string3, "ftp://(..){3,}")
str_match_all(string3, "ftp://..{3,}")
str_match_all(string3, "ftp://.{3,}")
str_match_all(string3, "ftp://.{3}")
str_match_all(string3, "ftp://.{15}")
str_match_all(string3, "ftp://.{18}")
str_match_all(string3, "ftp://.{30}")
str_match_all(string3, "ftp://.{32}")
string4 <- "We try to quantitatively capture these characteristics by defining a set of indexes, which can be computed using the mosaic image and the corresponding ground truth:
\\begin{itemize}
\\item $\\mu_{A_T}$ and $\\sigma_{A_T}$, the mean and standard deviation of the tiles area $A_T$, respectively;
\\item $\\rho_\\text{filler}$, the ratio between the filler area and the overall mosaic are, computed as
$\\rho_\\text{filler}=\\frac{\\sum_{T \\in \\mathcal{T} A_T}}{A}$, being $A$ the area of the mosaic;
\\item \\todo{does it worth?};
\\item \\todo{does it worth?};
\\item $\\mu_{C_T}$, the mean of the tiles \\emph{color dispersion} $C_T$,
being $C_T = \\sigma_R+\\sigma_G+\\sigma_B$, where $\\sigma_R$, $\\sigma_G$ and $\\sigma_B$ are the
standard deviation of the red, green and blue channel values of the pixels within the tile $T$.
\\end{itemize}
After applying a method to an image, we compare the segmented image (i.e., the result) against the ground truth and assess the performance according to the following three metrics:
\\begin{itemize}
\\item average tile precision $P$
\\item average tile recall $R$
\\item tile count error $C$
\\end{itemize}"
str_match_all(string4, "^\\$")
str_match_all(string4, "\\$")
str_match_all(string4, "\\$[.]+\\$")
str_match_all(string4, "[.]+")
str_match_all(string4, "//$.//$")
str_match_all(string4, "//$[.]//$")
str_match_all(string4, "//$[:graph:]//$")
str_match_all(string4, "[:graph:]//$")
str_match_all(string4, "[:graph:]")
str_match_all(string4, "[:graph:]+")
str_match_all(string4, "[:graph:]+", "//$")
str_match_all(string4, "[:graph:]+")
str_match_all(string4, "[...]+")
str_match_all(string4, "[^$]+")
str_match_all(string4, "\\$,[^$]+,\\$")
str_match_all(string4, "\\$[^$]+\\$")
string5 <- "<a href=\"javascript:openurl('/Xplore/accessinfo.jsp')\" class=\"topUnderlineLinks\">                                            <A href=\"/iel5/4235/4079606/04079617.pdf?tp=&arnumber=4079617&isnumber=4079606\" class=\"bodyCopy\">PDF</A>(3141 KB)&nbsp;
<A href='/xpl/RecentCon.jsp?punumber=10417'>Evolutionary Computation, 2005. The 2005 IEEE Congress on</A><br>
<td width=\"33%\" ><div align=\"right\"> <a href=\"/xplorehelp/Help_start.html#Help_searchresults.html\" class=\"subNavLinks\" target=\"blank\">Help</a>&nbsp;&nbsp;&nbsp;<a href=\"/xpl/contactus.jsp\" class=\"subNavLinks\">Contact Kimya ile ilgili çeþitli temel referans
<a href=\"http://search.epnet.com/login.asp?profile=web&amp;defaultdb=geh\"
<a href=\"http://iimpft.chadwyck.com/\" target=\"_parent\">International
<a href=\"standartlar.html#tse\" target=\"_parent\">NFPA Standartlarý</a>
<a href=\"http://www.gutenberg.org/\" target=\"_parent\">Project Gutenberg</a>
<a href=\"http://proquestcombo.safaribooksonline.com/?portal=proquestcombo&amp;uicode=istanbultek\"
<a href=\"http://www.scitation.org\" target=\"_parent\">Scitation</a>
dergilerin listesini görmek için <a href=\"/online/aip.html\">bu yolu</a>
<a href=\"http://www3.interscience.wiley.com/journalfinder.html\"
<td width=\"46%\"><a href=\"/xpl/periodicals.jsp\" class=\"dropDownNav\" accesskey=\"j\">Journals &amp; Magazines
<td><a href=\"http://www.ieee.org/products/onlinepubs/resources/XploreTutorial.pdf\" class=\"dropDownNav\">IEEE Xplore Demo</a></td>"
str_match_all(string5, "href=\")
str_match_all(string5, "href\\=\\\")
str_match_all(string5, "href\\=")
str_match_all(string5, "href\\=\\\\")
str_match_all(string5, "href=\\\\")
str_match_all(string5, "[^\]+")
str_match_all(string5, "[^\\]+")
str_match_all(string5, "[^\\\]+")
str_match_all(string5, "[^\\\\]+")
str_match_all(string5, "href=\\\\[^\\\\]+")
str_match_all(string5, "href\\=\\\\[^\\\\]+")
str_match_all(string5, "href\\=\\\\[^\\\\]+\\\\")
str_match_all(string5, "href\\=\\\\[[^\\\\]+]\\\\")
str_match_all(string5, "[[^\\\\]+]\\\\")
str_match_all(string5, "href")
str_match_all(string5, "href=\\\\")
str_match_all(string5, "href=")
str_match_all(string5, "href=\")
str_match_all(string5, "href=")
str_match_all(string5, "href=")
str_match_all(string5, "href=\")
str_match_all(string5, "href=")
str_match_all(string5, "href=")
str_match_all(string5, "href=\\\\")
str_match_all(string5, "href=")
str_match_all(string5, "\"")
str_match_all(string5, "[href]")
str_match_all(string5, "[href]+")
str_match_all(string5, "href")
str_match_all(string5, "href=\")
str_match_all(string5, "href=\\\\")
str_match_all(string5, "href\\=\\\\")
str_match_all(string5, "href\\=")
str_match_all(string5, "https?://(.+)$")
str_match_all(string5, "href=\(.+)$")
str_match_all(string5, "href=\\(.+)$")
str_match_all(string5, "href=\\\(.+)$")
str_match_all(string5, "href=\\\\(.+)$")
str_match_all(string5, "href=\\\\[.+]$")
str_match_all(string5, "href=\\\\")
str_match_all(string5, "href=\")
str_match_all(string5, "href=\\\\\")
str_match_all(string5, "href=\\\\")
str_match_all(string5, "href\\=\\\\")
str_match_all(string5, "href\\=")
str_match_all(string5, "href\\=[\\\\]")
str_match_all(string5, "[href\\=\\\\]")
str_match_all(string5, "[href\\=\\\\]+")
str_match_all(string5, "href\\=(\\\\)")
str_match_all(string5, "href\\=(\\\\\\")")
str_match_all(string5, "[href\\=]?")
str_match_all(string5, "[href=]?")
str_match_all(string5, "href=")
str_match_all(string5, "href=\\\"")
str_match_all(string5, "href=\\\"(.+)\"")
str_match_all(string5, "href=\\\"(^\")\"")
str_match_all(string5, "href=\\\"(.+)\"")
str_match_all(string3, "ftp://.+")
str_match_all(string3, "ftp://.{32}")
str_match_all(string3, "ftp://.+?")
str_match_all(string3, "ftp://.{32}")
str_match_all(string2, "[[0-9]+\\.]+")
{12,}
str_match_all(string2, "[[0-9]+\\.]{12,}")
str_match_all(string5, "href=\\\"(.+)\\\"")
str_match_all(string5, "href=\\\"(.+?)\\\"")
str_match_all(string5, "href=\\\"(.+?)\\\"|href=\\\'(.+?)\\\'")
str_match_all(string5, "href=\\\"(.*)\\\"|href=\\\'(.*)\\\'")
str_match_all(string5, "href=\\\"(.+?)\\\"|href=\\\'(.+?)\\\'")
str_match_all(string5, "href=\\\"[.+?]\\\"|href=\\\'[.+?]\\\'")
str_match_all(string5, "href=\\\"[.]+?\\\"|href=\\\'[.]+?\\\'")
str_match_all(string5, "href=\\\"(.+?)\\\"|href=\\\'(.+?)\\\'")
string6 <- "<http://www.classmates.com/go/e/200988231/CC123101BT/CM00>  <http://graphics.classmates.com/graphics/spacer.gif>  <http://graphics.classmates.com/graphics/sp
You have received this email because the requester specified you as their Manager. Please click http://itcapps.corp.enron.com/srrs/auth/emailLink.asp?ID=000000000053239&Page=Approval to review and act upon this request.     Request ID          : 000000000053239 Request Create Date
ronOnline.   The following User ID and Password will give you access to live prices on the web-site http://www.enrononline.com.  User ID: ADM40601 Password: WELCOME!   (note these are case sensitive)    Please keep your User I
<http://www.classmates.com/go/e/200988231/CC122401BC/CM00>  <http://graphics.classmates.com/graphics/spacer.gif>  <http://graphics.classmates.com/graphics/sp
http://www.btinternet.com/~pir8/arnie/, just click on the following hyperlink and complete the order form by Tuesday February 12, 2002.  http://zzz1.net/rd/rd.asp?ZXU=562&ZXD=1471085&UID=1471085  If you cannot link directly to the web site, simply cut and paste the address listed above into yo
been successful getting in the group. To access the group should go to your web browser and type in http://www.egroups.com  The screen should show that you are a member of smu-betas group. When you replied to the original
mber and password. For more details on how to log-on to eHRonline, see step-by-step instructions at http://isc.enron.com/site/doclibrary/user/ 2. Navigate to the pay advice using the following navigation menus: ? Pay Information ? Paycheck I
In addition to World Markets Energy information  <http://esource.enron.com/worldmarket.asp> and Country Analysis and Forecasting, <http://esource.enron.com/worldmarket_CountryAnalysis.asp>
<http://ad.doubleclick.net/clk;3549492;6600300;c?http://www.sportingbetusa.com/english/casino/casinonew-fr.asp?isLogged=notlogged> A WEEKEND PAIR-A-DICE <http://ad.doubleclick.net/clk;3549492;6600300;c?http://www.sportingbetusa.c
Mr. Skilling:  Your P number is P00500599.  For your convenience, you can also go to http://isc.enron.com/site/ under"
str_match_all(string6, "http://")
str_match_all(string6, "http://(.+)")
str_match_all(string6, "http://(.+?)")
str_match_all(string6, "http://(.)+")
str_match_all(string6, "http://(.)")
str_match_all(string6, "http://(\S)")
str_match_all(string6, "http://\S")
str_match_all(string6, "http://[^ ]")
str_match_all(string6, "http://[^ +]")
str_match_all(string6, "http://[^ ]+")
str_match_all(string5, "href=\\\"[^ ]+\\\"|href=\\\'[^ ]+\\\'")
string7 <- "ATGGCAATAACCCCCCGTTTCTACTTCTAGAGGAGAAAAGTATTGACATGAGCGCTCCCGGCACAAGGGCCAAAGAAGTCTCCAATTTCTTATTTCCGAATGACATGCGTCTCCTTGCGGGTAAATCACCGACCGCAATTCATAGAAGCCTGGGGGAACAGATAGGTCTAATTAGCTTAAGAGAGTAAATCCTGGGATCATTCAGTAGTAACCATAAACTTACGCTGGGGCTTCTTCGGCGGATTTTTACAGTTACCAACCAGGAGATTTGAAGTAAATCAGTTGAGGATTTAGCCGCGCTATCCGGTAATCTCCAAATTAAAACATACCGTTCCATGAAGGCTAGAATTACTTACCGGCCTTTTCCATGCCTGCGCTATACCCCCCCACTCTCCCGCTTATCCGTCCGAGCGGAGGCAGTGCGATCCTCCGTTAAGATATTCTTACGTGTGACGTAGCTATGTATTTTGCAGAGCTGGCGAACGCGTTGAACACTTCACAGATGGTAGGGATTCGGGTAAAGGGCGTATAATTGGGGACTAACATAGGCGTAGACTACGATGGCGCCAACTCAATCGCAGCTCGAGCGCCCTGAATAACGTACTCATCTCAACTCATTCTCGGCAATCTACCGAGCGACTCGATTATCAACGGCTGTCTAGCAGTTCTAATCTTTTGCCAGCATCGTAATAGCCTCCAAGAGATTGATGATAGCTATCGGCACAGAACTGAGACGGCGCCGATGGATAGCGGACTTTCGGTCAACCACAATTCCCCACGGGACAGGTCCTGCGGTGCGCATCACTCTGAATGTACAAGCAACCCAAGTGGGCCGAGCCTGGACTCAGCTGGTTCCTGCGTGAGCTCGAGACTCGGGATGACAGCTCTTTAAACATAGAGCGGGGGCGTCGAACGGTCGAGAAAGTCATAGTACCTCGGGTACCAACTTACTCAGGTTATTGCTTGAAGCTGTACTATTTTAGGGGGGGAGCGCTGAAGGTCTCTTCTTCTCATGACTGAACTCGCGAGGGTCGTGAAGTCGGTTCCTTCAATGGTTAAAAAACAAAGGCTTACTGTGCGCAGAGGAACGCCCATCTAGCGGCTGGCGTCTTGAATGCTCGGTCCCCTTTGTCATTCCGGATTAATCCATTTCCCTCATTCACGAGCTTGCGAAGTCTACATTGGTATATGAATGCGACCTAGAAGAGGGCGCTTAAAATTGGCAGTGGTTGATGCTCTAAACTCCATTTGGTTTACTCGTGCATCACCGCGATAGGCTGACAAAGGTTTAACATTGAATAGCAAGGCACTTCCGGTCTCAATGAACGGCCGGGAAAGGTACGCGCGCGGTATGGGAGGATCAAGGGGCCAATAGAGAGGCTCCTCTCTCACTCGCTAGGAGGCAAATGTAAAACAATGGTTACTGCATCGATACATAAAACATGTCCATCGGTTGCCCAAAGTGTTAAGTGTCTATCACCCCTAGGGCCGTTTCCCGCATATAAACGCCAGGTTGTATCCGCATTTGATGCTACCGTGGATGAGTCTGCGTCGAGCGCGCCGCACGAATGTTGCAATGTATTGCATGAGTAGGGTTGACTAAGAGCCGTTAGATGCGTCGCTGTACTAATAGTTGTCGACAGACCGTCGAGATTAGAAAATGGTACCAGCATTTTCGGAGGTTCTCTAACTAGTATGGATTGCGGTGTCTTCACTGTGCTGCGGCTACCCATCGCCTGAAATCCAGCTGGTGTCAAGCCATCCCCTCTCCGGGACGCCGCATGTAGTGAAACATATACGTTGCACGGGTTCACCGCGGTCCGTTCTGAGTCGACCAAGGACACAATCGAGCTCCGATCCGTACCCTCGACAAACTTGTACCCGACCCCCGGAGCTTGCCAGCTCCTCGGGTATCATGGAGCCTGTGGTTCATCGCGTCCGATATCAAACTTCGTCATGATAAAGTCCCCCCCTCGGGAGTACCAGAGAAGATGACTACTGAGTTGTGCGAT"
str_match_all(string7, "A.TAAT|GC(A|G)(A|T)TG")
str_match_all(string7, "(A(A|C|G|T)TAAT)|(GC(A|G)(A|T)TG)")
str_match_all(string7, "TAAT")
str_match_all(string7, "AATAAT")
str_match_all(string7, "ACTAAT")
str_match_all(string7, "AGTAAT")
str_match_all(string7, "ATTAAT")
str_match_all(string7, "GCAATG")
str_match_all(string7, "GCATTG")
str_match_all(string7, "GCGATG")
str_match_all(string7, "GCGTTG")
str_match_all(string7, "(A(A|C|G|T)TAAT)|(GC(A|G)(A|T)TG)")
library(rvest)
library(rvest)
url <- "https://standardebooks.org/ebooks/herman-melville/moby-dick/text/chapter-1"
moby_html <- read_html(url)
moby_html
moby_html %>%
html_nodes("p") %>%
head()
moby_html %>%
html_nodes("p") %>% #grab all elements between <p> and </p>
html_text() -> moby_paragraphs
moby_text <- paste(moby_paragraphs)
moby_paragraphs
moby_text
moby_text <- moby_paragraphs %>% paste(1:17)
moby_text
moby_text <- moby_text %>% str_replace_all("—", " ")
moby_text <- moby_text %>% str_remove_all("[:punct:]")
moby_text
moby_text <- moby_text %>% str_replace_all("—", " ")
moby_text
moby_text <- moby_text %>% str_remove_all("^[:punct:]")
moby_text
moby_text <- moby_text %>% str_remove_all("(^-([:punct:]))")
moby_text
moby_text <- moby_text %>% str_remove_all("[:punct:] & ^-")
moby_text
moby_text <- moby_paragraphs %>% paste(1:17)
moby_text <- moby_text %>% str_replace_all("—", " ")
moby_text <- moby_text %>% str_remove_all("[:punct:] & ^-")
moby_text
moby_text <- moby_text %>% str_remove_all("[^-[:punct:]]")
moby_text
moby_text <- moby_text %>% str_remove_all("[^\\-[:punct:]]")
moby_text <- moby_text %>% str_remove_all("[[:punct:]^-]")
moby_text <- moby_text %>% str_remove_all("[[:punct:]]")
moby_text <- moby_text %>% str_remove_all("[:punct:]")
moby_text <- moby_paragraphs %>% paste(1:17)
moby_text <- moby_text %>% str_replace_all("—", " ")
moby_text <- moby_text %>% str_remove_all("[:punct:]")
moby_text <- moby_paragraphs %>% paste(1:17)
moby_text <- moby_text %>% str_replace_all("—", " ")
moby_text <- moby_text %>% str_remove_all("[:punct:]^-")
moby_text <- moby_text %>% str_remove_all("[:punct:]|^-")
moby_text <- moby_paragraphs %>% paste(1:17)
moby_text <- moby_text %>% str_replace_all("—", " ")
moby_text
moby_text <- moby_text %>% str_remove_all("[:punct:]^-")
moby_text <- moby_text %>% str_remove_all("^-[:punct:]")
moby_text <- moby_text %>% str_remove_all("[^-][:punct:]")
moby_text
moby_text <- moby_text %>% str_remove_all("[^\\-][:punct:]")
moby_text
moby_text <- moby_paragraphs %>% paste(1:17)
moby_text <- moby_text %>% str_replace_all("—", " ")
moby_text <- moby_text %>% str_remove_all("[:punct:]")
moby_text
moby_text <- moby_text %>% str_remove_all("[^a-zA-Z0-9\\-]")
moby_text
moby_html %>%
html_nodes("p") %>% #grab all elements between <p> and </p>
html_text() -> moby_paragraphs
moby_text <- moby_paragraphs %>% paste(1:17)
moby_text <- moby_text %>% str_replace_all("—", " ")
moby_text <- moby_text %>% str_remove_all("[^a-zA-Z0-9]")
moby_text <- moby_text %>% str_remove_all("[^a-zA-Z0-9 ]")
moby_text <- moby_paragraphs %>% paste(1:17)
moby_text <- moby_text %>% str_replace_all("—", " ")
moby_text <- moby_text %>% str_remove_all("[^a-zA-Z0-9 ]")
moby_text <- moby_paragraphs %>% paste(1:17)
moby_text <- moby_text %>% str_replace_all("—", " ")
moby_text <- moby_text %>% str_remove_all("[^a-zA-Z0-9 \\-]")
moby_text
moby_text <- moby_text %>% str_remove_all("[^a-zA-Z0-9 \\-]") %>% tolower
moby_text
moby_text <- moby_text %>% str_remove_all("[^a-zA-Z0-9 \\-]") %>% tolower
word <- moby_text %>% str_split(" +") %>% unlist()
moby_words <- as.data.frame(word)
View(moby_words)
moby_words %>% mutate(length = str_length())
View(moby_words)
moby_words %>% mutate(length = str_length(word))
moby_words %>% mutate(length = str_length(word)) %>% arrange(-length)
library(tidytext)
library(tidytext)
stop_words <- stop_words
moby_words %>% anti_join(stop_words)
moby_words %>% anti_join(stop_words) %>%
group_by(word) %>%
summarize(n=n()) %>%
arrange(-n)
str_match_all(string3, "ftp://[^ ]+")
str_match_all(string2, "[[a-zA-z0-9]+\\:][^ ]+")
str_match_all(string2, "[[a-zA-z0-9]+\\:]{17}")
str_match_all(string2, "[[a-zA-z0-9]+\\:[^ ]+]")
str_match_all(string2, "[[a-zA-z0-9]+\\:]{17}")
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, fig.align = "center", warning = F, message = F,
tidy=TRUE, tidy.opts=list(width.cutoff=60), R.options=list(max.print=100))
library(tidyverse)
anime <- read_csv("datasets/anime.csv")
userlist <- read_csv("datasets/animelist.csv")
##pulling first 200,000 rows of userlist to avoid RStudio crashing on me
sample_userlist <- userlist %>% slice(1:200000)
##deleting variables/columns in anime.csv I'm not interested in
animetitles <- anime %>% select(c(MAL_ID, Name, Score, Genres, Type,
Episodes, Premiered, Studios, Source,
Duration, Rating, Ranked, Popularity,
Members, Favorites))
##turning already-tidy users dataset to untidy
userswide <- sample_userlist %>%
pivot_wider(names_from="user_id",
values_from=c(rating, watching_status, watched_episodes))
View(userswide)
userslong <- userswide %>%
pivot_longer(c("rating_0":"watched_episodes_674"))
userslong <- userswide %>%
pivot_longer(c("rating_0":"watched_episodes_674")) %>%
separate(name, into=c("category","user_id"), sep="_(?=[0-9])")
